{"version":3,"sources":["webpack:///src/app/front-office/bills/bills.component.ts","webpack:///src/app/front-office/bills/bills.component.html","webpack:///src/app/front-office/client-layout/client-layout.routing.ts","webpack:///src/app/front-office/feedbackclient/feedback.component.ts","webpack:///src/app/front-office/feedbackclient/feedback.component.html","webpack:///src/app/front-office/messervices/client-docs/client-docs.component.ts","webpack:///src/app/front-office/messervices/client-docs/client-docs.component.html","webpack:///src/app/front-office/client-layout/client-layout.module.ts","webpack:///src/app/front-office/home/home.component.ts","webpack:///src/app/front-office/home/home.component.html","webpack:///src/app/front-office/messervices/messervices.component.ts","webpack:///src/app/front-office/messervices/messervices.component.html"],"names":["BillsComponent","selector","templateUrl","styleUrls","ClientLayoutRoutes","path","component","data","title","uploader","uri","feedbackComponent","adminService","AuthService","fb","changeDetectorRef","sanitizer","snackBar","url","removeAfterUpload","allowedFileType","hasBaseDropZoneOver","hasAnotherDropZoneOver","submited","removing","userfeedback","baseUrl","message","displayedColumns","docList","onBeforeUploadItem","item","withCredentials","onAfterAddingFile","fileItem","filePreviewPath","bypassSecurityTrustUrl","window","URL","createObjectURL","_file","formclinet","group","Sujet","required","descriptionsujet","formreponse","reponsesujet","fetchuserfeedbackData","e","section","action","files","document","getElementById","classList","contains","add","remove","setTimeout","detectChanges","id","getIdfromToken","getFeedbacksclient","subscribe","res","filter","ClineId","MyDataSourceclient","paginator","sort","err","console","log","selectedfeedback","_id","reponse","filterValue","trim","toLowerCase","value","valid","queue","length","i","upload","onCompleteItem","response","status","headers","push","JSON","parse","uploadname","open","duration","verticalPosition","panelClass","feedback","onCompleteAll","addFeedbackclient","success","msg","closeModal","nativeElement","click","reset","deleteFeedbacksclient","controls","date","Date","addreponseFeedbacksclient","index","file","name","applyFilter","onSubmitclientfeedback","fileOverAnother","onSubmitreponse","changeDetection","OnPush","ClientDocsComponent","mService","activatedRoute","authservice","router","notificationService","receiverId","notifLink","docsForm","docsList","getService","uploadAll","docName","originalname","substring","indexOf","docPath","service","clientDocs","forEach","doc","docType","docs","updateService","clientConsult","tasks","task","user","params","paramsValue","clt","getUserfromToken","pm","fname","lname","notification","createNotification","stringify","data2","queryParams","getOneService","navigate","actions","className","filename","downloadDoc","split","pop","error","showActions","loadfiles","ClientLayoutModule","forChild","imports","declarations","HomeComponent","employeeService","cService","datepipe","awsUrl","unpaidbills","serviceEncours","clientId","displayedColumnsUsers","fetchBills","fetchServices","getclient","vis","getServicesByClientId","services","finish_date","getUsers","users","some","one","find","usersData","paginatorUsers","sortUsers","MyDataSource","getOneClient","client","getConfig","getbillForClient","bills","tmp","paid_status","all","unpaid","bill","amount","Number","replace","vat","rs","debour","result","toString","toFixed","dateStr","config","structure","billTotalht","billTotalttc","printContents","popupWin","type","montant","transform","stringAsDate","createdAt","numero","mat_fis","email","adress","image","tel","debours","libelle","screen","height","width","write","$","clone","html","close","applyFilterUsers","MesservicesComponent","fetchUsers","getServices","superId","getOneUser","completed","permo"],"mappings":"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","file":"front-office-client-layout-client-layout-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-bills',\r\n  templateUrl: './bills.component.html',\r\n  styleUrls: ['./bills.component.scss']\r\n})\r\nexport class BillsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<p>\r\n  bills works!\r\n</p>\r\n","\r\nimport { Routes } from '@angular/router';\r\nimport {HomeComponent} from '../home/home.component';\r\nimport {MesservicesComponent} from '../messervices/messervices.component';\r\nimport { ClientDocsComponent } from '../../front-office/messervices/client-docs/client-docs.component';\r\nimport {ProfilClientComponent} from '../profil-client/profil-client.component'\r\nimport {feedbackComponent} from '../feedbackclient/feedback.component'\r\nexport const ClientLayoutRoutes: Routes = [\r\n    {path: 'home' , component : HomeComponent,data:{title : 'Accueil'}},\r\n    {path :'myservices', component : MesservicesComponent, data:{title: 'Mes services'}},\r\n    {path :'docs', component : ClientDocsComponent, data:{title: 'Documents'}},\r\n    {path :'clientprofile', component : ProfilClientComponent, data:{title: 'Documents'}},\r\n    {path :'clientfedback', component : feedbackComponent, data:{title: 'Feedback'}}\r\n   \r\n\r\n];\r\n","import { Component, OnInit, ViewChild, ChangeDetectorRef, ElementRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport {AdminService} from '../../services/admin/admin.service' ;\r\nimport {AuthService} from '../../services/auth/auth.service'\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { environment } from '../../../environments/environment' ;\r\nimport {FormGroup, FormBuilder, FormControl, Validators} from '@angular/forms';\r\nimport { FileUploader } from 'ng2-file-upload';\r\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\r\n\r\n\r\nconst uri = environment.uri;\r\n\r\n\r\n@Component({\r\n  selector: 'app-feedback',\r\n  templateUrl: './feedback.component.html',\r\n  styleUrls: ['./feedback.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class feedbackComponent implements OnInit {\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChild('closeModal', {static: true} ) closeModal: ElementRef;\r\n  uploader: FileUploader = new FileUploader({url: uri, removeAfterUpload: true , allowedFileType: ['image', 'doc', 'pdf', 'xls', 'ppt']});\r\n  filePreviewPath: SafeUrl;\r\n  hasBaseDropZoneOver:boolean = false;\r\n  hasAnotherDropZoneOver:boolean = false;\r\n  submited = false;\r\n  removing = false;\r\n  formclinet : FormGroup;\r\n  formreponse : FormGroup\r\n  userfeedback = [] ;\r\n  uri = environment.baseUrl;\r\n  mypermissions: any[];\r\n  MyDataSourceclient : any\r\n  clientdatasource : any\r\n  selectedfeedback : any \r\n  message = []\r\n  displayedColumns: string[] = ['Libelle','Description','Date','Etat'];\r\n  docList = [] ;\r\n\r\nconfirmationId :string ;\r\n\r\n  constructor(\r\n              private adminService: AdminService,\r\n              private AuthService : AuthService,\r\n              private fb: FormBuilder,\r\n              private changeDetectorRef: ChangeDetectorRef,\r\n              private sanitizer: DomSanitizer,          \r\n              private snackBar: MatSnackBar,) { \r\n    \r\n               \r\n                this.uploader.onBeforeUploadItem = (item) => {\r\n                  item.withCredentials = false;             \r\n                 }\r\n                  this.uploader.onAfterAddingFile = (fileItem) => {\r\n                    this.filePreviewPath  = this.sanitizer.bypassSecurityTrustUrl((window.URL.createObjectURL(fileItem._file)));\r\n                   }\r\n                \r\n                   this.formclinet = this.fb.group({\r\n                    Sujet: ['', Validators.required],\r\n                    descriptionsujet: '',\r\n                   \r\n                   })\r\n                   this.formreponse = this.fb.group({\r\n                    reponsesujet : ['' ,Validators.required ]\r\n                   })\r\n                \r\n              }\r\n\r\n  ngOnInit() {\r\n  this.fetchuserfeedbackData();\r\n  }\r\n  \r\n  public fileOverBase(e:any):void {\r\n    this.hasBaseDropZoneOver = e;\r\n  }\r\n \r\n  public fileOverAnother(e:any):void {\r\n    this.hasAnotherDropZoneOver = e;\r\n  }\r\n  rotateArrow(section,action){\r\n    let files : HTMLElement = document.getElementById(section) as HTMLElement;\r\n    if(!files.classList.contains('down')){\r\n      files.classList.add('down') ;\r\n    }else{\r\n      files.classList.remove('down');\r\n    }\r\n  }\r\n\r\n  removeFile(item){\r\n    this.removing = true;\r\n    item.remove();\r\n    setTimeout(()=>{    \r\n      this.removing = false;\r\n    }, 500); \r\n    this.changeDetectorRef.detectChanges();\r\n  }\r\n\r\n\r\n  fetchuserfeedbackData(){\r\n  const id = this.AuthService.getIdfromToken()\r\n    this.adminService.getFeedbacksclient()\r\n        .subscribe(res => { \r\n      \r\n  res = res.filter(data => data.ClineId == id)\r\n          \r\n        this.MyDataSourceclient = new MatTableDataSource();\r\n        this.MyDataSourceclient.data = res;\r\n        this.MyDataSourceclient.paginator = this.paginator;\r\n        this.MyDataSourceclient.sort = this.sort;\r\n  }, err => {\r\n    console.log(err);\r\n  });\r\n\r\n  }\r\n\r\n  detailmessage(message) {\r\n  \r\n  this.selectedfeedback = message._id;\r\n    this.message = message.reponse\r\n    console.log(this.message)\r\n  }\r\n\r\n\r\n\r\n    applyFilter(filterValue: string) {\r\n      this.MyDataSourceclient.filter = filterValue.trim().toLowerCase();\r\n    }\r\n    onSubmitclientfeedback(){\r\n      console.log(this.formclinet.value)\r\n      if(this.formclinet.valid){\r\n        this.submited = true;\r\n        if (this.uploader.queue.length > 0) {\r\n          for(var i =0;i<this.uploader.queue.length;i++){\r\n          this.uploader.queue[i].upload()\r\n          this.uploader.onCompleteItem = (item: any, response: any , status: any, headers: any) => {\r\n            if(response)\r\n            this.docList.push(JSON.parse(response).uploadname);\r\n            else{\r\n              this.snackBar.open('Une erreur c\\'est produit verifier votre connection', 'X', {\r\n                 duration: 6000,\r\n                 verticalPosition: 'top',\r\n                 panelClass:['custom-snack-error'],\r\n               });\r\n            }\r\n          }\r\n        }\r\n      }\r\n  \r\n        let feedback = this.formclinet.value;\r\n        if(this.uploader.queue.length > 0){\r\n          this.uploader.onCompleteAll = () => {\r\n            feedback.files = this.docList;\r\n            this.adminService.addFeedbackclient(feedback).subscribe(data => {\r\n              if (data.success) {\r\n                this.fetchuserfeedbackData();\r\n                this.snackBar.open(data.msg, 'X', {\r\n                   duration: 6000,\r\n                   verticalPosition: 'top',\r\n                   panelClass:['custom-snack'],\r\n                 });\r\n                this.closeModal.nativeElement.click() //<-- here\r\n                this.formclinet.reset();\r\n              } else {\r\n                this.snackBar.open(data.msg, 'X', {\r\n                 duration: 6000,\r\n                 verticalPosition: 'top',\r\n                 panelClass:['custom-snack-error'],\r\n               });\r\n              }\r\n              this.submited = false;\r\n             });\r\n          }\r\n        }else{\r\n        this.adminService.addFeedbackclient(feedback).subscribe(data => {\r\n          if (data.success) {    \r\n            this.fetchuserfeedbackData();\r\n            this.snackBar.open(data.msg, 'X', {\r\n             duration: 6000,\r\n             verticalPosition: 'top',\r\n             panelClass:['custom-snack'],\r\n           });\r\n            this.closeModal.nativeElement.click() //<-- here\r\n            this.formclinet.reset();\r\n          } else {\r\n            this.snackBar.open(data.msg, 'X', {\r\n             duration: 6000,\r\n             verticalPosition: 'top',\r\n             panelClass:['custom-snack-error'],\r\n           });\r\n          }\r\n          this.submited = false;\r\n         });\r\n      } }\r\n      else{\r\n        this.snackBar.open('Verifier les champs', 'X', {\r\n             duration: 6000,\r\n             verticalPosition: 'top',\r\n             panelClass:['custom-snack'],\r\n           });\r\n        this.submited = false;\r\n      }\r\n  }\r\n  delete(id){\r\n    this.adminService.deleteFeedbacksclient(id).subscribe(data => {  \r\n      if (data.success) {    \r\n      this.fetchuserfeedbackData();\r\n      this.snackBar.open(data.msg, 'X', {\r\n       duration: 6000,\r\n       verticalPosition: 'top',\r\n       panelClass:['custom-snack'],\r\n     });\r\n   \r\n    }\r\n  })\r\n}\r\nonSubmitreponse(){\r\n  console.log(this.formreponse.value)\r\n  let reponse = {\r\n    reponse :this.formreponse.controls.reponsesujet.value,\r\n    date : new Date()\r\n\r\n  }\r\n  this.adminService.addreponseFeedbacksclient(this.selectedfeedback ,reponse).subscribe( data => {\r\n    if (data.success) {    \r\n      this.fetchuserfeedbackData();\r\n      this.snackBar.open(data.msg, 'X', {\r\n       duration: 6000,\r\n       verticalPosition: 'top',\r\n       panelClass:['custom-snack'],\r\n     });\r\n      this.closeModal.nativeElement.click() //<-- here\r\n      this.formreponse.reset();\r\n    } else {\r\n      this.snackBar.open(data.msg, 'X', {\r\n       duration: 6000,\r\n       verticalPosition: 'top',\r\n       panelClass:['custom-snack-error'],\r\n     });\r\n    }\r\n  })\r\n\r\n  \r\n}\r\n\r\n// Ajout des fonctions trackBy pour optimiser les *ngFor\r\ntrackByUploaderItem(index: number, item: any) {\r\n  return item?.id || item?.file?.name || index;\r\n}\r\ntrackByMessage(index: number, msg: any) {\r\n  return msg?._id || index;\r\n}\r\n}\r\n","<div class=\"main-content\">\r\n    <div class=\"container-fluid\">\r\n      <div class=\"row\">\r\n      \r\n          <div class=\"col-md-12\">\r\n              <div class=\"card\">\r\n                  <div class=\"card-header card-header-info row\">\r\n                      <h4 class=\"card-title\">client feedback </h4>\r\n                      <!-- Button trigger modal -->\r\n                    <button class=\"right\" color=\"basic\" mat-mini-fab data-toggle=\"modal\" data-target=\"#feedbackModalclient\" aria-label=\"Ajouter une demande\">\r\n                      <span class=\"material-icons\">\r\n                        add\r\n                        </span>\r\n                    </button>\r\n                  </div>\r\n                  <div class=\"card-body\">\r\n\r\n                    <mat-form-field>\r\n                      <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                    </mat-form-field>\r\n\r\n                    <div class=\"table-responsive\">\r\n                      <table mat-table  [dataSource]=\"MyDataSourceclient\" multiTemplateDataRows  matSort  class=\"table borderless\">\r\n                  \r\n                           <!-- Libelle Column -->\r\n                           <ng-container matColumnDef=\"Libelle\">\r\n                              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"header\"> Sujet </th>\r\n                              <td class=\"pt-3 pb-3\" mat-cell *matCellDef=\"let data\">  {{data.Sujet}} </td>\r\n                            </ng-container>\r\n                  \r\n                           <!-- Description Column -->\r\n                           <ng-container matColumnDef=\"Description\">\r\n                              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"header\"> Description </th>\r\n                              <td class=\"pt-3 pb-3\" mat-cell *matCellDef=\"let data\">  {{data.descriptionsujet}}</td>\r\n                            </ng-container>\r\n                          \r\n                            <!-- Date Column -->\r\n                           <ng-container matColumnDef=\"Date\">\r\n                              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"header\"> Date de soumission </th>\r\n                              <td class=\"pt-3 pb-3\" mat-cell *matCellDef=\"let data\">  {{data.createdAt | date:'dd/MM/yyyy HH:mm'}}</td>\r\n                            </ng-container>\r\n                      \r\n\r\n                            <!-- status Column -->\r\n                           <ng-container matColumnDef=\"Etat\">\r\n                              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"header\"> Action </th>\r\n                              <td class=\"pt-3 pb-3\" mat-cell *matCellDef=\"let data\">\r\n                                <span style=\"cursor: pointer;\"  class=\"text-info material-icons\" data-toggle=\"modal\" data-target=\"#viewdetails\" (click)=\"detailmessage(data)\">visibility</span>\r\n                                <span style=\"cursor: pointer;\" class=\"text-danger material-icons\" (click)=\"delete(data._id)\"> clear</span>\r\n                             \r\n                                </td>\r\n                            </ng-container>\r\n                  \r\n                                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                                <tr mat-row *matRowDef=\"let data; columns: displayedColumns;\"></tr>\r\n                        </table>\r\n                        <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n                        </div>\r\n                  \r\n                    </div>\r\n              </div>\r\n          </div>\r\n         \r\n      </div>\r\n \r\n    </div>\r\n</div>\r\n\r\n<!--model client-->\r\n<div id=\"feedbackModalclient\" class=\"modal\" tabindex=\"-1\" role=\"dialog\">\r\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">Feedback Client</h5>\r\n        <button #closeModal type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n\r\n<form  [formGroup]=\"formclinet\" (ngSubmit)=\"onSubmitclientfeedback()\">              \r\n      <div class=\"modal-body\">            \r\n          \r\n  <div class=\"card-body\">\r\n          \r\n        <div class=\"row mb-2\">\r\n            <div class=\"col-md-8\">\r\n              <mat-form-field>\r\n                <input  matInput placeholder=\"Sujet\" formControlName=\"Sujet\">\r\n                <mat-error *ngIf=\"!formclinet.controls.Sujet.valid\">Le Sujet est requis</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n           \r\n        </div>\r\n        <div class=\"row mb-2\">\r\n            <div class=\"col-md-12\">\r\n              <mat-form-field>\r\n                <textarea matInput placeholder=\"Description\" formControlName=\"descriptionsujet\"></textarea>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-12\">\r\n          <label  ng2FileDrop \r\n          [ngClass]=\"{'another-file-over-class': hasAnotherDropZoneOver}\"\r\n          (fileOver)=\"fileOverAnother($event)\"\r\n          [uploader]=\"uploader\"\r\n          class=\"well my-drop-zone\" accept=\"application/msword, application/vnd.ms-excel, \r\n          application/vnd.ms-powerpoint, text/plain,\r\n          application/pdf,application/vnd.openxmlformats-officedocument.wordprocessingml.document, \r\n          application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, \r\n          application/vnd.openxmlformats-officedocument.presentationml.slideshow, image/*\">\r\n             <div *ngIf=\"uploader.queue.length > 0\" class=\"files\">\r\n              <div class=\"row\" >\r\n                  <div class=\"col-md-2\" *ngFor=\"let item of uploader.queue; trackBy: trackByUploaderItem\">\r\n              \r\n                  <img  src=\"../../../../assets/img/{{item?.file?.name.split('.').pop()}}.png\" style=\"width:80px;height:80px\" loading=\"lazy\">\r\n\r\n              <div style=\"text-align:center\" >{{item?.file?.name.split('.')[0]}}</div>\r\n              <i (click)=\"removeFile(item)\" style=\"font-size: 26px;\" class=\"close material-icons text-danger\">cancel</i>\r\n          </div>\r\n              </div>\r\n              <br>\r\n              Avancement d'upload:\r\n                  <div class=\"progress\" >\r\n                      <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\r\n                  </div>\r\n              \r\n          </div>\r\n          <span *ngIf=\"uploader.queue.length == 0\" class=\"dropfiles\" >Cliquer ou faire glisser les fichiers</span>\r\n          <input [disabled]=\"removing\" type=\"file\" #fileInput ng2FileSelect [uploader]=\"uploader\" class=\"inputFile\" style=\"display: none; cursor: pointer;\" multiple\r\n          accept=\"application/msword, application/vnd.ms-excel, application/vnd.ms-powerpoint, text/plain,\r\n          application/pdf,application/vnd.openxmlformats-officedocument.wordprocessingml.document, \r\n          application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, \r\n          application/vnd.openxmlformats-officedocument.presentationml.slideshow, image/*\"/>\r\n      </label>\r\n\r\n      <button [disabled]=\"submited\" *ngIf=\"uploader.queue.length>0\" type=\"button\" (click)=\"uploader.clearQueue()\" class=\"btn btn-danger pull-right\">Effacer</button>\r\n        </div>\r\n          \r\n        \r\n  </div>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" type=\"submit\" class=\"btn btn-info\"> <i *ngIf=\"submited\" class=\"fa fa-spinner fa-spin mr-2\"></i>Envoyer</button>\r\n        <button [disabled]=\"submited\" type=\"reset\" (click)=\"uploader.clearQueue()\" type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Annuler</button>\r\n      </div>\r\n    </form>        \r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"modal fade\" id=\"viewdetails\" tabindex=\"-1\" aria-labelledby=\"viewdetailsLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"viewdetailsLabel\">Modal title</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <ng-container *ngIf=\"message.length > 0\">\r\n           <div  *ngFor=\"let msg of message; trackBy: trackByMessage\">\r\n            {{msg.date| date:'dd/MM/yyyy HH:mm'}}  {{msg.reponse}} \r\n           </div>\r\n          </ng-container>\r\n           <form  [formGroup]=\"formreponse\" (ngSubmit)=\"onSubmitreponse()\">  \r\n           <mat-form-field>\r\n            <textarea matInput placeholder=\"Reponse\" formControlName=\"reponsesujet\"></textarea>\r\n            </mat-form-field>\r\n      \r\n      \r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n        <button type=\"button\" mat-raised-button   class=\"btn btn-primary\" [disabled] =\"!formreponse.dirty\"  type=\"submit\"> Envoyer Reponse</button>\r\n      </div>\r\n    </form>\r\n    </div>  \r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { FileUploader } from 'ng2-file-upload';\r\nimport {FormGroup, FormBuilder, Validators, FormControl} from '@angular/forms';\r\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\r\nimport {ManagementService} from '../../../services/management/management.service';\r\nimport {AuthService} from '../../../services/auth/auth.service';\r\nimport {Router, ActivatedRoute } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport {saveAs} from 'file-saver';\r\nimport {NotificationService} from '../../../services/notification/notification.service';\r\n\r\nconst uri = environment.uri;\r\n\r\nexport interface modelDoc{\r\n  docName?:string;\r\n  docPath?:string;\r\n}\r\nexport interface linkModel{\r\n  url? : string ;\r\n  params? : string ;\r\n  paramsValue?:string ;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-client-docs',\r\n  templateUrl: './client-docs.component.html',\r\n  styleUrls: ['./client-docs.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\n\r\nexport class ClientDocsComponent implements OnInit {\r\n  public uploader: FileUploader = new FileUploader({url: uri, removeAfterUpload: true , allowedFileType: ['image', 'doc', 'pdf', 'xls', 'ppt']});\r\n  public filePreviewPath: SafeUrl;\r\n  public hasBaseDropZoneOver:boolean = false;\r\n  public hasAnotherDropZoneOver:boolean = false;\r\n  service : any ; \r\n  id : any ;\r\n  docsForm : FormGroup ;\r\n  public notification : any ;\r\n  public receiverId : any = [] ;\r\n  public notifLink : linkModel = {} ;\r\n  constructor(\r\n    private sanitizer: DomSanitizer,\r\n    private mService : ManagementService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private authservice : AuthService,\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private notificationService : NotificationService,\r\n    private snackBar: MatSnackBar,\r\n  ) { \r\n    this.uploader.onBeforeUploadItem = (item) => {\r\n      item.withCredentials = false;\r\n     \r\n    }\r\n    this.uploader.onAfterAddingFile = (fileItem) => {\r\n      this.filePreviewPath  = this.sanitizer.bypassSecurityTrustUrl((window.URL.createObjectURL(fileItem._file)));\r\n    }\r\n\r\n\r\n    this.docsForm = this.fb.group({\r\n      docsList: new FormControl('',Validators.required),\r\n      \r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getService();\r\n\r\n  }\r\n\r\n\r\n  loadfiles(){\r\n   \r\n    this.uploader.uploadAll();\r\n    this.uploader.onCompleteItem = (item: any, response: any , status: any, headers: any) => {\r\n      let document : modelDoc = {};\r\n          document.docName = JSON.parse(response).originalname.substring(0, JSON.parse(response).originalname.indexOf('.')) ;\r\n          document.docPath = JSON.parse(response).uploadname;\r\n         this.service.clientDocs.forEach(doc => {\r\n            if(doc.docType == this.docsForm.controls.docsList.value){\r\n              doc.docs.push(document);\r\n            }\r\n         });\r\n \r\n    }\r\n\r\n    this.uploader.onCompleteAll = () => {\r\n       this.mService.updateService(this.id,this.service).subscribe(data => {\r\n        if (data.success) {\r\n          this.getService();\r\n          this.receiverId.push(this.service.clientConsult);\r\n          this.service.tasks.forEach(task => {\r\n            this.receiverId.push(task.user);\r\n          });\r\n          this.notifLink.url = \"/tasks\";\r\n          this.notifLink.params = 'id' ;\r\n          this.notifLink.paramsValue = this.service._id ;\r\n          let clt = this.authservice.getUserfromToken();\r\n          let msg = clt.pm  == true ? clt.name : clt.fname+' '+clt.lname;\r\n              this.notification = {\r\n                'sender': this.notificationService.getIdfromToken(),\r\n                'receiver': this.receiverId,\r\n                'title': this.service.name,\r\n                'message': msg+' a envoyé de nouveaux documents',\r\n                'link': this.notifLink,\r\n              };\r\n              this.notificationService.createNotification(JSON.stringify(this.notification)).subscribe(data2 => {\r\n                if (data2.success) {\r\n                  console.log(this.notification);\r\n                  console.log(data2);\r\n                }\r\n               });\r\n          this.snackBar.open('Documents envoyés au cabinet', 'X', {\r\n               duration: 6000,\r\n               verticalPosition: 'top',\r\n               panelClass:['custom-snack'],\r\n             });\r\n       \r\n        } else {\r\n          console.log(data);\r\n          this.snackBar.open('Une erreur s\\'est produite', 'X', {\r\n               duration: 6000,\r\n               verticalPosition: 'top',\r\n               panelClass:['custom-snack-error'],\r\n             });\r\n        }\r\n       });\r\n     }\r\n\r\n   console.log(\"ok\")\r\n \r\n  }\r\n\r\n\r\n  public fileOverBase(e:any):void {\r\n    this.hasBaseDropZoneOver = e;\r\n  }\r\n \r\n  public fileOverAnother(e:any):void {\r\n    this.hasAnotherDropZoneOver = e;\r\n  }\r\n\r\n  getService(){\r\n    this.activatedRoute.queryParams.subscribe(params => {\r\n      this.id = params['id'];\r\n    if (this.id) {\r\n      this.mService.getOneService(this.id)\r\n      .subscribe(res => {\r\n         this.service = res ;\r\n         console.log(this.service);\r\n      }, err => {\r\n         console.log(err);\r\n     });\r\n    }\r\n    else{\r\n      this.router.navigate(['/']);\r\n    } \r\n  });\r\n  }\r\n\r\n  showActions(id){\r\n    let actions : HTMLElement = document.getElementById(id) as HTMLElement;\r\n    if(actions.className !=\"\")\r\n    actions.className = \"\";\r\n    else\r\n    actions.className= \"actions\";\r\n  }\r\n\r\n  deleteTask(file){\r\n    this.service.clientDocs = this.service.clientDocs.filter(document => document._id != file) ;\r\n      this.mService.updateService(this.id,this.service).subscribe(data => {\r\n         if (data.status) {\r\n           this.snackBar.open('Document Supprimé', 'X', {\r\n               duration: 6000,\r\n               verticalPosition: 'top',\r\n               panelClass:['custom-snack'],\r\n             });\r\n        \r\n         } else {\r\n           console.log(data);\r\n           this.snackBar.open('Une erreur s\\'est produite', 'X', {\r\n               duration: 6000,\r\n               verticalPosition: 'top',\r\n               panelClass:['custom-snack-error'],\r\n             });\r\n         }\r\n        });\r\n     }\r\n\r\n  downloadTask(file){\r\n    var filename = file.docPath;\r\n    this.mService.downloadDoc(filename)\r\n    .subscribe(\r\n      data => saveAs(data,file.docName+'.'+filename.split('.').pop()),\r\n      error => console.error(error)\r\n    );\r\n   }\r\n\r\n   rotateArrow(section,action){\r\n    let files : HTMLElement = document.getElementById(section) as HTMLElement;\r\n    if(!files.classList.contains('down')){\r\n      files.classList.add('down') ;\r\n    }else{\r\n      files.classList.remove('down');\r\n    }\r\n    this.showActions(action);\r\n\r\n  }\r\n\r\n  // Ajout des fonctions trackBy pour optimiser les *ngFor\r\n  trackByDoc(index: number, doc: any) {\r\n    return doc?._id || doc?.docType || index;\r\n  }\r\n  trackByFile(index: number, file: any) {\r\n    return file?._id || file?.docPath || index;\r\n  }\r\n  trackByUploaderItem(index: number, item: any) {\r\n    return item?.id || item?.file?.name || index;\r\n  }\r\n\r\n}\r\n","<div class=\"main-content\">\r\n  <div class=\"container-fluid\">\r\n<div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n              <div class=\"card\">\r\n                <div class=\"card-header card-header-tabs card-header-info\">\r\n                    <div class=\"nav-tabs-navigation\">\r\n                        <div class=\"nav-tabs-wrapper\">\r\n                            <ul class=\"nav nav-tabs pull-left\" data-tabs=\"tabs\">\r\n\r\n                              <li class=\"nav-item\">\r\n                                <a mat-button class=\"nav-link active \" href=\"#taches\" data-toggle=\"tab\">\r\n                                    <i class=\"material-icons\">list</i> documents envoyés\r\n                                    <div class=\"ripple-container\"></div>\r\n                                </a>\r\n                            </li>   \r\n                                    \r\n                                      <li class=\"nav-item\">\r\n                                              <a mat-button class=\"nav-link \" href=\"#uploadfile\" data-toggle=\"tab\">\r\n                                                  <i class=\"material-icons\">cloud_upload</i> Envoyer des documents\r\n                                                  <div class=\"ripple-container\"></div>\r\n                                              </a>\r\n                                          </li>\r\n                                          \r\n                                          \r\n                                          \r\n                                         \r\n\r\n                            </ul>\r\n                          \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n             \r\n                <div class=\"card-body\">\r\n                    <div class=\"tab-content\">\r\n                        <div class=\"tab-pane active\" id=\"taches\">\r\n                                <div class=\"files\">\r\n                                        <div class=\"row\" *ngIf=\"service?.clientDocs.length > 0\" >\r\n                                            <div class=\"col-md-12\" *ngFor=\"let doc of service?.clientDocs; trackBy: trackByDoc\" >\r\n                                                     <mat-toolbar style=\" margin-top: 20px;\" (click)=\"rotateArrow(doc.docType,'show'+doc.docType)\" class=\"card-header-primary custom-header\">\r\n                                                            <span style=\"margin-left: 8px\">{{doc.docType}}  ({{doc.docs.length}} Fichiers)</span>\r\n                                                            <span style=\"flex: 1 1 auto;\">  </span>\r\n                                                            <i  id=\"{{doc.docType}}\"class=\"material-icons rotate\">expand_more</i>\r\n                                                        </mat-toolbar>\r\n                                                        <div  class=\"actions\" id=\"show{{doc.docType}}\">\r\n                                                        <div class=\"row\" style=\"margin-top:20px\" *ngIf=\"doc.docs.length > 0\" >\r\n                                                                \r\n                                                                <div style=\"text-align: center;cursor: pointer\" class=\"col-sm-2\"  *ngFor=\"let file of doc.docs; trackBy: trackByFile\">\r\n                                                                        \r\n                                                             <img  (click)=\"showActions(file._id)\" src=\"../../../../assets/img/{{file.docPath.split('.').pop()}}.png\" style=\"width:80px;height:80px\" loading=\"lazy\">\r\n    \r\n                                                             <div>{{file.docName}}</div>\r\n                                                             <div style=\"cursor: pointer\" class=\"actions\" id=\"{{file?._id}}\">\r\n                                                             <i (click)=\"downloadTask(file)\" style=\"margin : auto;font-size: 26px\" class=\"material-icons text-primary\">cloud_download</i>\r\n                                                            </div>\r\n                                                             </div>\r\n                                                            </div>\r\n                                                            <div style=\"margin-top:20px\" class=\"row\" *ngIf=\"doc.docs.length <= 0\">\r\n                                                           \r\n                                                                    <div class=\"form-row text-center col-md-12\">             \r\n                                                                                 <i style=\"font-size:700%\" class=\"material-icons demande\">description</i>\r\n                                                                                 <label style=\"width: 100%\" >Aucun fichier trouvé</label>                \r\n                                                                         </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                       \r\n                                            </div>\r\n                             \r\n                                        </div>\r\n                                    \r\n                        \r\n                                      \r\n                                    </div>\r\n                        </div>\r\n                    \r\n\r\n\r\n\r\n\r\n                        <div class=\"tab-pane \" id=\"uploadfile\">\r\n                            <form [formGroup]=\"docsForm\" (ngSubmit)=\"loadfiles()\">\r\n                                <mat-form-field class=\"col-md-6\">     \r\n                                        <mat-select  placeholder=\"Type de document\"  formControlName=\"docsList\">   \r\n                                                 <mat-option *ngFor=\"let doc of service?.clientDocs; trackBy: trackByDoc\" [value]=\"doc.docType\">\r\n                                                  {{doc.docType}}  \r\n                                                </mat-option>\r\n                                      \r\n                                               </mat-select>\r\n                                               <mat-error *ngIf=\"this.docsForm.controls.docsList.invalid\">Selectionner un type</mat-error>\r\n          \r\n                                              </mat-form-field>\r\n                                              <br>\r\n                    <label style=\"width: 100%;\"  ng2FileDrop \r\n                    [ngClass]=\"{'another-file-over-class': hasAnotherDropZoneOver}\"\r\n                    (fileOver)=\"fileOverAnother($event)\"\r\n                    [uploader]=\"uploader\"\r\n                    class=\"well my-drop-zone\" accept=\"application/msword, application/vnd.ms-excel, \r\n                    application/vnd.ms-powerpoint, text/plain,\r\n                    application/pdf,application/vnd.openxmlformats-officedocument.wordprocessingml.document, \r\n                    application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, \r\n                    application/vnd.openxmlformats-officedocument.presentationml.slideshow, image/*\">\r\n                    <span  class=\"dropfiles\" >Cliquer ou faire glisser les fichiers</span>\r\n                    <input  type=\"file\" #fileInput ng2FileSelect [uploader]=\"uploader\" class=\"inputFile\" style=\"display: none; cursor: pointer;\" multiple\r\n                    accept=\"application/msword, application/vnd.ms-excel, application/vnd.ms-powerpoint, text/plain,\r\n                    application/pdf,application/vnd.openxmlformats-officedocument.wordprocessingml.document, \r\n                    application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, \r\n                    application/vnd.openxmlformats-officedocument.presentationml.slideshow, image/*\"/>\r\n                </label>\r\n                     <div class=\"files\">\r\n                         <div class=\"row\" >\r\n                             <div class=\"col-md-2\" *ngFor=\"let item of uploader.queue; trackBy: trackByUploaderItem\">\r\n                          \r\n                              <img  src=\"../../../../assets/img/{{item?.file?.name.split('.').pop()}}.png\" style=\"width:80px;height:80px\" loading=\"lazy\">\r\n\r\n                          <div style=\"text-align:left\" >{{item?.file?.name.split('.')[0]}}</div>\r\n                          <i (click)=\"item.remove()\" style=\"font-size: 26px;margin-right:25px\" class=\"close material-icons text-danger\">cancel</i>\r\n                      </div>\r\n                         </div>\r\n                         <br>\r\n                         Avancement d'upload:\r\n                              <div class=\"progress\" >\r\n                                  <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\r\n                              </div>\r\n                          \r\n                     </div>\r\n                     <br>\r\n                     <button [disabled]=\"uploader.queue.length == 0\" type=\"submit\" class=\"btn btn-primary btn-round pull-right\" >Envoyer</button>\r\n                    </form>    \r\n                    </div>\r\n                    \r\n                    </div>\r\n                </div>\r\n            </div>\r\n          \r\n            </div>\r\n          </div>\r\n          </div>\r\n          \r\n          </div> \r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ClientLayoutRoutes } from './client-layout.routing';\r\nimport { HomeComponent } from '../home/home.component';\r\nimport { MesservicesComponent } from '../messervices/messervices.component';\r\nimport { ClientDocsComponent } from '../../front-office/messervices/client-docs/client-docs.component';\r\nimport { FileSelectDirective, FileDropDirective, FileUploader, FileUploadModule } from 'ng2-file-upload';\r\nimport { BillsComponent } from '../bills/bills.component';\r\nimport {feedbackComponent} from '../feedbackclient/feedback.component'\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FileUploadModule,\r\n    RouterModule.forChild(ClientLayoutRoutes),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatButtonModule,\r\n    MatRippleModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatTooltipModule,\r\n    MatToolbarModule,\r\n    MatProgressBarModule,\r\n    MatSnackBarModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n  ],\r\n  declarations: [\r\n    HomeComponent,\r\n    MesservicesComponent,\r\n    ClientDocsComponent,\r\n    BillsComponent,\r\n    feedbackComponent\r\n  ]\r\n})\r\n\r\nexport class ClientLayoutModule {}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport {ManagementService} from '../../services/management/management.service';\r\nimport {EmployeeService} from '../../services/employee/employee.service';\r\nimport {AuthService} from '../../services/auth/auth.service';\r\nimport {AdminService} from '../../services/admin/admin.service';\r\nimport {ConfigurationService} from '../../services/configuration/configuration.service'; \r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DatePipe } from '@angular/common'\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n @ViewChild(MatPaginator, { static: true }) paginatorUsers: MatPaginator;\r\n @ViewChild(MatSort, { static: true }) sortUsers: MatSort;\r\n uri = environment.awsUrl;\r\n bills: any;\r\n client: any;\r\n services: any;\r\n config : any;\r\n unpaidbills = 0;\r\n users : any ;\r\n vis : any[];\r\n serviceEncours = 0;\r\n clientId = this.authservice.getIdfromToken();\r\n MyDataSource: any;\r\n usersData : any ;\r\n displayedColumns: string[] = ['n', 'dateCreation', 'montantTotal', 'status', 'action'];\r\n displayedColumnsUsers: string[] = ['image', 'Nom', 'Email', 'Tel'];\r\n\r\n  constructor(\r\n    private employeeService: EmployeeService,\r\n    private mService: ManagementService,\r\n    private authservice: AuthService,\r\n    private adminService: AdminService,\r\n    private cService :ConfigurationService,\r\n    private datepipe: DatePipe,\r\n  ) {\r\n    this.fetchBills()\r\n    this.fetchServices();\r\n    this.getclient();\r\n   }\r\n\r\n  ngOnInit() {\r\n \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  fetchServices() {\r\n    this.vis = [];\r\n    this.mService.getServicesByClientId(this.clientId)\r\n    .subscribe(res => {\r\n      this.services = res;\r\n      for(let i = 0; i < res.length; ++i){\r\n        if (res[i].finish_date === 'En cours') {\r\n          this.serviceEncours++;\r\n        }\r\n    }\r\n    this.employeeService.getUsers()\r\n    .subscribe(res => {\r\n      this.users = res ;\r\n      this.services.forEach(service => {\r\n        if(this.users.some(user => user._id == service.clientConsult)){\r\n          if(!this.vis.some(one => one._id == service.clientConsult))\r\n          this.vis.push(this.users.find(user => user._id == service.clientConsult));\r\n        }\r\n      });\r\n      this.usersData = new MatTableDataSource();\r\n      this.usersData.data = this.vis;\r\n      this.usersData.paginator = this.paginatorUsers;\r\n      this.usersData.sort = this.sortUsers;\r\n    }, err => {\r\n      console.log(err);\r\n    });\r\n     \r\n    }, err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n  \r\n  applyFilter(filterValue: string) {\r\n    this.MyDataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  applyFilterUsers(filterValue: string) {\r\n    this.usersData.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  getclient() {\r\n    this.adminService.getOneClient(this.clientId)\r\n      .subscribe(res => {\r\n        this.client = res ;\r\n     \r\n        this.getConfig();\r\n      }, err => {\r\n         console.log(err);\r\n     });\r\n  }\r\n\r\n  fetchBills() {\r\n    this.employeeService.getbillForClient(this.clientId)\r\n    .subscribe(res => {\r\n      this.bills = res;\r\n      console.log(this.bills) ;\r\n     \r\n      let tmp = 0;\r\n      for(let i = 0; i < res.length; ++i){\r\n          if (res[i].paid_status === true) {\r\n            tmp++;\r\n          }\r\n      }\r\n      this.unpaidbills = res.length - tmp;\r\n      this.MyDataSource = new MatTableDataSource();\r\n      this.MyDataSource.data = res;\r\n      this.MyDataSource.paginator = this.paginator;\r\n      this.MyDataSource.sort = this.sort;\r\n    }, err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n\r\n  getAmount(){\r\n    let all = 0 ; \r\n    let unpaid = 0 ;\r\n    this.bills.forEach(bill => {\r\n      if(typeof bill.amount==\"string\") \r\n      {\r\n      if(bill.paid_status == false)\r\n      unpaid += Number(bill.amount.replace(/\\s/g, ''))  + bill.vat - bill.rs + bill.debour + 0.6;\r\n      \r\n      all += Number(bill.amount.replace(/\\s/g, '')) + bill.vat - bill.rs + bill.debour + 0.6;\r\n    }\r\n    else {\r\n    if(bill.paid_status == false)\r\n    unpaid += Number(bill.amount);\r\n    all += Number(bill.amount);\r\n\r\n    }}\r\n    );\r\n    let result = {\r\n      \"all\" : Number(all.toString().replace(/\\s/g, '')).toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1 '),\r\n      \"unpaid\" : Number(unpaid.toString().replace(/\\s/g, '')).toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1 '),\r\n    }\r\n    return result ;\r\n  }\r\n  stringAsDate(dateStr: string) {\r\n    return new Date(dateStr);\r\n  }\r\n\r\n\r\n  getConfig(){\r\n    this.cService.getConfig()\r\n    .subscribe(res => {\r\n      if(res.length > 0){\r\n      this.config = res[0].structure.find(one => one._id == this.client.structure) ;\r\n      console.log(\"client Home config\",res)\r\n  }\r\n    }, err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  print(bill){\r\n    let billTotalht: any = 0;\r\n    let billTotalttc = Number(bill.amount.replace(/\\s/g, '')) + bill.vat + bill.rs + bill.debour + Number(\"0.60\".replace(/\\s/g, ''));\r\n    console.log(Number(bill.amount.replace(/\\s/g, '')));\r\n    console.log(bill.rs);\r\n    console.log(bill.debour , this.config );\r\n\r\n    billTotalttc = Number(billTotalttc.toString().replace(/\\s/g, '')).toFixed(3).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1 ');\r\n    let printContents, popupWin;\r\n    let service = this.services.find(one => one._id == bill.service);\r\n    if(bill.type == 1){\r\n    service.name = \"Avance \"+service.name;\r\n    service.montant = bill.amount;\r\n  }\r\n    let date = this.datepipe.transform(this.stringAsDate(bill.createdAt), 'yyyy-MM-dd HH:mm')\r\n    // tslint:disable-next-line:max-line-length\r\n    printContents = `<div class=\"container printable\" id=\"bill\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n    \t\t<div class=\"invoice-title\">\r\n\t\t\t\t<h3>`+date+`</h3>\r\n\t\t\t\t<h3 class=\"pull-right\">Note d'honoraires N° `+bill.numero+`</h3>\r\n    \t\t</div>\r\n    \t\t<hr>\r\n    \t\t<div class=\"row\">\r\n    \t\t\t<div class=\"col-md-6\">\r\n    \t\t\t\t<address>\r\n        \t\t\t<strong>Facturé de:</strong><br>`+\r\n    \t\t\t\t\tthis.config.name+`<br>`+\r\n    \t\t\t\t\tthis.config.mat_fis+`<br>`+\r\n    \t\t\t\t\tthis.config.email+`<br>`+\r\n              this.config.adress+\r\n            `</address>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-6 float-right\">\r\n\t\t\t\t\t\t\t <div class=\"logo float-right\">\r\n\t\t\t\t\t\t\t\t\t<a href=\"javascript:;\" class=\"simple-text\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"logo-img\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img width=\"90px\" height=\"auto\" src=\"`+this.uri+this.config.image+`\"/> \r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t<address>\r\n              <strong>Facturé à:</strong><br>`;\r\n              if (!this.client.name) {\r\n                printContents += '<div>' + this.client.fname + ' ' + this.client.lname + '</div>'\r\n              } else {\r\n                printContents += '<div>' + this.client.name + '</div>'\r\n              }\r\n              printContents +=    `<div>` + this.client.mat_fis + `</div>\r\n                                    ` + this.client.adress + `<br>\r\n                                    ` + this.client.tel + `<br>\r\n                                    ` + this.client.email + `</address>\r\n\t\t\t\t\t\t</div>\r\n    \t\t</div>\r\n    \t</div>\r\n    </div>\r\n    \r\n    <div class=\"row\">\r\n    \t<div class=\"col-md-12\">\r\n    \t\t<div class=\"panel panel-default\">\r\n          <div class=\"panel-heading\">`;\r\n          if (bill.type == 0) {\r\n            printContents += \"<h3 class='panel-title'><strong><strong>Résumé du note d'honoraires</strong></h3>\";\r\n          } else {\r\n            printContents += \"<h3 class='panel-title'><strong><strong>Avance sur note d'honoraires</strong></h3>\";\r\n          }\r\n\r\n\t\t\t\tprintContents += `</div>\r\n    \t\t\t<div class=\"panel-body\">\r\n    \t\t\t\t<div class=\"table-responsive\">\r\n    \t\t\t\t\t<table class=\"table table-condensed\">\r\n    \t\t\t\t\t\t<thead>\r\n                                <tr>\r\n        \t\t\t\t\t\t\t<td><strong>Libellé</strong></td>\r\n        \t\t\t\t\t\t\t<td class=\"text-center\"><strong></strong></td>\r\n        \t\t\t\t\t\t\t<td class=\"text-center\"><strong></strong></td>\r\n        \t\t\t\t\t\t\t<td class=\"text-right\"><strong>Prix HT</strong></td>\r\n        \t\t\t\t\t\t\t<td class=\"text-center\"><strong></strong></td>\r\n                                </tr>\r\n    \t\t\t\t\t\t</thead>\r\n    \t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t<ng-container >\r\n\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>`+service.name+`</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td class=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td class=\"text-center\"></td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td class=\"text-right\">`+service.montant+`</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td class=\"text-right\"></td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\t\r\n                  </ng-container>`;\r\n                  if(this.bills && bill.type == 0){\r\n                    this.bills.forEach(one => {\r\n                      if(one.type == 1){\r\n                    printContents += `<tr>\r\n                      <td>Avance sur note d'honoraires : `+one.numero+`</td>\r\n                      <td class=\"text-center\"></td>\r\n                      <td class=\"text-center\"> <span class=\"noprint\">`+this.datepipe.transform(this.stringAsDate(one.createdAt), 'yyyy-MM-dd')+`</span></td>\r\n                      <td class=\"text-right\">-`+one.amount+`</td>\r\n                      <td class=\"text-right\"></td>\r\n                    </tr>`\t;\r\n                      }\r\n                    });\r\n\r\n                  }\r\n\t\r\n                  if(bill.debours.length > 0 ){\r\n                    printContents += `<tr>\r\n                    <td><strong>Débours</strong></td>\r\n                    <td class=\"text-center\"></td>\r\n                    <td class=\"text-center\"></td>\r\n                    <td class=\"text-right\"></td>\r\n                    <td class=\"text-right\"></td>\r\n                  </tr>`;\r\n                    bill.debours.forEach(one => {\r\n                     printContents += `<tr>\r\n                      <td>`+one.libelle+`</td>\r\n                      <td class=\"text-center\"></td>\r\n                      <td class=\"text-center\"></td>\r\n                      <td class=\"text-right\">`+one.montant+`</td>\r\n                      <td class=\"text-right\"></td>\r\n                    </tr>`;\t\t\r\n                    });\r\n                  \r\n                  }\r\n\r\n    \t\t\t\t\t\tprintContents +=`<tr>\r\n    \t\t\t\t\t\t\t\t<td style=\"border-top: 2px solid;\" class=\"thick-line\"></td>\r\n    \t\t\t\t\t\t\t\t<td style=\"border-top: 2px solid;\" class=\"thick-line\"></td>\r\n    \t\t\t\t\t\t\t\t<td style=\"border-top: 2px solid;\" class=\"thick-line text-center\"></td>\r\n    \t\t\t\t\t\t\t\t<td style=\"border-top: 2px solid;\" class=\"thick-line text-right\"></td>\r\n\t\t\t\t\t\t\t\t  </tr>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t   \t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td style=\"border: none;\"></td>\t<td style=\"border: none;\"></td>\r\n\t\t\t\t\t\t\t\t\t\t<td class=\"no-line text-center\"><strong>Total HT</strong></td>\r\n\t\t\t\t\t\t\t\t\t\t<td class=\"no-line text-right\">`+bill.amount+`</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n    \t\t\t\t\t\t\t<tr>\r\n                  <td style=\"border: none;\"></td>\t<td style=\"border: none;\"></td>\r\n                  <td class=\"no-line text-center\"><strong>TVA</strong></td>\r\n    \t\t\t\t\t\t\t<td class=\"no-line text-right\">13%</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td style=\"border: none;\"></td>\t<td style=\"border: none;\"></td>\r\n\t\t\t\t\t\t\t\t\t<td class=\"no-line text-center\"><strong>Total TVA</strong></td>\r\n    \t\t\t\t\t\t\t\t<td class=\"no-line text-right\">`+ Number(bill.vat.toString().replace(/\\s/g, '')).toFixed(3).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1 ')+`</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td style=\"border:none;\"></td>\t<td style=\"border: none;\"></td>\r\n\t\t\t\t\t\t\t\t\t<td class=\"no-line text-center\"><strong>Timbre fiscal</strong></td>\r\n    \t\t\t\t\t\t\t\t<td class=\"no-line text-right\">1.000</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td style=\"border: none;\"></td>\t<td style=\"border: none;\"></td>\r\n\t\t\t\t\t\t\t\t\t\t<td class=\"no-line text-center\"><strong>R/S</strong></td>\r\n\t\t\t\t\t\t\t\t\t\t<td class=\"no-line text-right\">`+ Number(bill.rs.toString().replace(/\\s/g, '')).toFixed(3).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1 ')+`</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n    \t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td style=\"border: none;\"></td>\t<td style=\"border: none;\"></td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td class=\"no-line text-center\"><strong>Débours</strong></td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td class=\"no-line text-right\">`+ Number(bill.debour.toString().replace(/\\s/g, '')).toFixed(3).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1 ')+`</td>\r\n\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t<tr>\r\n    \t\t\t\t\t\t\t\t<td style=\"border: none;\"></td>\r\n    \t\t\t\t\t\t\t\t<td style=\"border: none;\"></td>\r\n    \t\t\t\t\t\t\t\t<td class=\"no-line text-center\"><strong>Total</strong></td>\r\n    \t\t\t\t\t\t\t\t<td class=\"no-line text-right\">`+billTotalttc+`</td>\r\n    \t\t\t\t\t\t\t</tr>\r\n    \t\t\t\t\t\t</tbody>\r\n    \t\t\t\t\t</table>\r\n    \t\t\t\t</div>\r\n    \t\t\t</div>\r\n    \t\t</div>\r\n    \t</div>\r\n    </div>\r\n</div>`;\r\n\r\n    popupWin = window.open('', '_blank', 'top=0,left=50%,height=' + screen.height + ',width=' + screen.width);\r\n    popupWin.document.open();\r\n    popupWin.document\r\n    .write(`<html>\r\n     ${$('head').clone().html()}\r\n    <body onload=\"window.print();window.close()\">${printContents}</body></html>`);\r\n    popupWin.document.close();\r\n  }\r\n\r\n\r\n\r\n  returnamounttc(bill){\r\n    let billTotalttc = Number(bill.amount) + bill.vat - bill.rs + bill.debour + 0.6;\r\n    return Number(billTotalttc.toString().replace(/\\s/g, '')).toFixed(3).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1 ')\r\n  }\r\n}\r\n","<div class=\"main-content\">\r\n  <div class=\"container-fluid\">\r\n      <div class=\"row mx-auto\">\r\n          <div class=\"col-lg-4 col-md-6 col-sm-6\">\r\n              <div class=\"card card-stats\">\r\n                  <div class=\"card-header card-header-primary card-header-icon\">\r\n                      <div class=\"card-icon\">\r\n                          <i class=\"material-icons\">class</i>\r\n                      </div>\r\n                      <p class=\"card-category\">Mes Services</p>\r\n                      <h3 class=\"card-title\">{{services?.length}}\r\n                      </h3>\r\n                  </div>\r\n                  <div class=\"card-footer\">\r\n                      <div class=\"stats\">\r\n                          <i class=\"material-icons text-primary\">remove_red_eye</i>\r\n                          <a [routerLink]=\"['/myservices']\">Voir tout...</a>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n          <!-- <div class=\"col-lg-3 col-md-6 col-sm-6\">\r\n              <div class=\"card card-stats\">\r\n                  <div class=\"card-header card-header-warning card-header-icon\">\r\n                      <div class=\"card-icon\">\r\n                          <i class=\"material-icons\">list</i>\r\n                      </div>\r\n                      <p class=\"card-category\">Services en cours</p>\r\n                      <h3 class=\"card-title\">{{serviceEncours}}</h3>\r\n                  </div>\r\n                  <div class=\"card-footer\">\r\n                      <div class=\"stats\">\r\n                            <i class=\"material-icons text-warning\">remove_red_eye</i>\r\n                            <a class=\"text-warning\" [routerLink]=\"['/myservices']\">Voir tout...</a>                      </div>\r\n                  </div>\r\n              </div>\r\n          </div> -->\r\n          <div class=\"col-lg-4 col-md-6 col-sm-6\">\r\n              <div class=\"card card-stats\">\r\n                  <div class=\"card-header card-header-info card-header-icon\">\r\n                      <div class=\"card-icon\">\r\n                          <i class=\"material-icons\">note</i>\r\n                      </div>\r\n                      <p class=\"card-category\">Mes Factures</p>\r\n                      <h3 class=\"card-title\">{{bills?.length}}</h3>\r\n                  </div>\r\n                  <div class=\"card-footer\">\r\n                      <div *ngIf=\"bills\" class=\"stats\">\r\n                           <span class=\"text-info\">Montant : </span> {{getAmount().all}}\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n          <div class=\"col-lg-4 col-md-6 col-sm-6\">\r\n              <div class=\"card card-stats\">\r\n                  <div [ngClass]=\"{'card-header-danger': unpaidbills > 0,\r\n                                   'card-header-success': unpaidbills <= 0,\r\n                                   'card-header card-header-success card-header-icon': true}\">\r\n                      <div class=\"card-icon\">\r\n                          <i *ngIf=\"unpaidbills > 0\" class=\"material-icons\">warning</i>\r\n                          <i *ngIf=\"unpaidbills <= 0\" class=\"material-icons\">done</i>\r\n                      </div>\r\n                      <p class=\"card-category\">Factures non payée</p>\r\n                      <h3 class=\"card-title\">{{unpaidbills}}</h3>\r\n                  </div>\r\n                  <div class=\"card-footer\">\r\n                      <div *ngIf=\"bills\" class=\"stats\">\r\n                            <span class=\"text-danger\">Montant : </span>  {{getAmount().unpaid}}\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  \r\n      <div class=\"row\">\r\n          <div class=\"col-lg-6 col-md-12\">\r\n              <div class=\"card\">\r\n                  <div class=\"card-header card-header-warning\">\r\n                      <h4 class=\"card-title\">Mes Factures</h4>\r\n                  </div>\r\n                  <div class=\"card-body table-responsive\">\r\n                        <mat-form-field>\r\n                                <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                              </mat-form-field>\r\n                                <div class=\"table-responsive\">\r\n                                    <table mat-table  [dataSource]=\"MyDataSource\" multiTemplateDataRows  matSort  class=\"table borderless\">\r\n                                             \r\n                                          <!-- Number Column -->\r\n                                          <ng-container matColumnDef=\"n\">\r\n                                              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"header\"> N° </th>\r\n                                              <td class=\"pt-3 pb-3\" mat-cell *matCellDef=\"let data\"> {{data.numero}}</td>\r\n                                            </ng-container>\r\n\r\n                                             <!-- dateCreation Column -->\r\n                                          <ng-container matColumnDef=\"dateCreation\">\r\n                                              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"header\"> Date de creation </th>\r\n                                              <td class=\"pt-3 pb-3\" mat-cell *matCellDef=\"let data\"> {{ stringAsDate(data.createdAt) | date:'dd/MM/yyyy HH:mm' }}</td>\r\n                                            </ng-container>\r\n                            \r\n                                             <!-- Montant Column -->\r\n                                          <ng-container matColumnDef=\"montantTotal\">\r\n                                              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"header\"> Montant Total TTC </th>\r\n                                              <td class=\"pt-3 pb-3\" mat-cell *matCellDef=\"let data\">{{returnamounttc(data)}}</td>\r\n                                            </ng-container>\r\n                            \r\n                                             <!-- status Column -->\r\n                                          <ng-container matColumnDef=\"status\">\r\n                                              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"header\"> Status </th>\r\n                                              <td class=\"pt-3 pb-3\" mat-cell *matCellDef=\"let data\">\r\n                                                  <span *ngIf=\"data.paid_status\" class=\"badge badge-success\">payé</span>\r\n                                                  <a *ngIf=\"!data.paid_status\"  data-toggle=\"modal\" data-target=\"#myModal\" (click)=\"togglModal(data._id,data.numero)\" class=\"enzel badge badge-warning\">non payé</a>\r\n                                              </td>\r\n                                            </ng-container>\r\n                                             \r\n                                             <!-- Action Column -->\r\n                                             <ng-container matColumnDef=\"action\">\r\n                                              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"header\"> Action </th>\r\n                                              <td class=\"pt-3 pb-3\" mat-cell *matCellDef=\"let data\">\r\n                                                <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n                                                  <i (click)=\"print(data)\" class=\"enzel text-primary material-icons mr-2\">print</i>\r\n                                                 </div>\r\n                                                </td>\r\n                                            </ng-container>\r\n                            \r\n                                              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                                              <tr mat-row *matRowDef=\"let data; columns: displayedColumns;\">\r\n                                              </tr>\r\n                                      </table>\r\n                                      <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n                                </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n\r\n          <div class=\"col-lg-6 col-md-12\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-header card-header-primary\">\r\n                        <h4 class=\"card-title\">Vis à vis</h4>\r\n                    </div>\r\n                    <div class=\"card-body table-responsive\">\r\n                          <mat-form-field>\r\n                                  <input matInput (keyup)=\"applyFilterUsers($event.target.value)\" placeholder=\"Filter\">\r\n                                </mat-form-field>\r\n                                  <div class=\"table-responsive\">\r\n                                      <table mat-table  [dataSource]=\"usersData\" multiTemplateDataRows  matSort  class=\"table borderless\">\r\n                                               \r\n                                            <!-- Number Column -->\r\n                                            <ng-container matColumnDef=\"image\">\r\n                                                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"header\"> </th>\r\n                                                <td class=\"pt-3 pb-3\" mat-cell *matCellDef=\"let data\"> \r\n                                                        <img class=\"img\"  *ngIf=\"data.image\" style=\"width:50px;height:50px\" src=\"{{uri+data.image}}\" loading=\"lazy\"/>  \r\n                                                </td>\r\n                                              </ng-container>\r\n  \r\n                                               <!-- dateCreation Column -->\r\n                                            <ng-container matColumnDef=\"Nom\">\r\n                                                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"header\"> Nom et Prénom </th>\r\n                                                <td class=\"pt-3 pb-3\" mat-cell *matCellDef=\"let data\"> {{data.fname}} {{data.lname}} </td>\r\n                                              </ng-container>\r\n                              \r\n                                               <!-- Montant Column -->\r\n                                            <ng-container matColumnDef=\"Email\">\r\n                                                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"header\"> Email</th>\r\n                                                <td class=\"pt-3 pb-3\" mat-cell *matCellDef=\"let data\">{{data.email}}</td>\r\n                                              </ng-container>\r\n                              \r\n                                               <!-- status Column -->\r\n                                            <ng-container matColumnDef=\"Tel\">\r\n                                                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"header\"> Tel </th>\r\n                                                <td class=\"pt-3 pb-3\" mat-cell *matCellDef=\"let data\"> {{data.tel}} </td>\r\n                                              </ng-container>\r\n\r\n                        \r\n                              \r\n                                                <tr mat-header-row *matHeaderRowDef=\"displayedColumnsUsers\"></tr>\r\n                                                <tr mat-row *matRowDef=\"let data; columns: displayedColumnsUsers;\">\r\n                                                </tr>\r\n                                        </table>\r\n                                        <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n                                  </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n      </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport {ManagementService} from '../../services/management/management.service';\r\nimport {EmployeeService} from '../../services/employee/employee.service';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n\r\n@Component({\r\n  selector: 'app-messervices',\r\n  templateUrl: './messervices.component.html',\r\n  styleUrls: ['./messervices.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MesservicesComponent implements OnInit {\r\n  uri = environment.baseUrl;\r\n  awsUrl = environment.awsUrl;\r\n  public users :any ;\r\n  public services : any ;\r\n  public user : any ; \r\n  public superId : any ;\r\n  constructor(\r\n    private employeeService : EmployeeService,\r\n    private mService : ManagementService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.fetchServices();\r\n    this.fetchUsers();\r\n  }\r\n\r\n  fetchServices(){\r\n      this.mService.getServices()\r\n      .subscribe(res => {\r\n        this.services =res.filter(service => service.client == this.employeeService.getIdfromToken()) ;\r\n        this.superId = this.services[0].clientConsult ;\r\n        this.employeeService.getOneUser(this.superId)\r\n        .subscribe(res => {\r\n          this.user = res ;\r\n          this.user.image = this.awsUrl + res.image ;\r\n          console.log(this.user);\r\n        }, err => {\r\n          console.log(err);\r\n        });\r\n      }, err => {\r\n        console.log(err);\r\n      });\r\n    }\r\n\r\n    checkSuper(id){\r\n      this.employeeService.getOneUser(id)\r\n      .subscribe(res => {\r\n        this.user = res ;\r\n        this.user.image = this.awsUrl + res.image ;\r\n        \r\n      }, err => {\r\n        console.log(err);\r\n      });\r\n    }\r\n\r\n  fetchUsers(){\r\n    this.employeeService.getUsers()\r\n    .subscribe(res => {\r\n      this.users = res ;\r\n    }, err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n  avenceService(tasks){\r\n    let completed  = [] ;\r\n    let all = [] ;\r\n    tasks.forEach(one => {\r\n        if(one.status == 'completed')\r\n        completed.push(one);\r\n        all.push(one);\r\n    });\r\n    return (completed.length/all.length)* 100 ;\r\n  }\r\n  \r\n  stringAsDate(dateStr: string) {\r\n    return new Date(dateStr);\r\n  }\r\n\r\n  // Ajout des fonctions trackBy pour optimiser les *ngFor\r\n  trackByService(index: number, service: any) {\r\n    return service?._id || index;\r\n  }\r\n  trackByUser(index: number, user: any) {\r\n    return user?._id || index;\r\n  }\r\n  trackByPermo(index: number, permo: any) {\r\n    return permo?._id || index;\r\n  }\r\n\r\n}\r\n","<div class=\"main-content\">\r\n  <div class=\"container-fluid\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-8\">\r\n          <div class=\"card\">\r\n              <div class=\"card-header card-header-primary\">\r\n                  <h4 class=\"card-title\">Services</h4>\r\n                  <p class=\"card-category\">Tout mes services:</p>\r\n              </div>\r\n              <div class=\"card-body table-responsive\">\r\n                  <table class=\"table table-hover\">\r\n                    <thead class=\"text-primary\" >\r\n                      <th>Service</th><th>Superviseur</th> <th width=\"30%\">Avancement</th><th>Creation</th> <th>Etat</th>  \r\n                  </thead>\r\n                      <tbody style=\"cursor: pointer;\" *ngFor=\"let service of services; trackBy: trackByService\" (click)=\"checkSuper(service.clientConsult)\" >\r\n                          <td>\r\n                              {{service.name}}\r\n                          </td>\r\n                        <ng-container *ngFor=\"let user of users; trackBy: trackByUser\">\r\n                     <td *ngIf=\"service.clientConsult == user._id\">\r\n                       {{user.fname}} {{user.lname}}\r\n                     </td>\r\n                  </ng-container>\r\n                    <td>\r\n                        <span>{{avenceService(service.tasks)}} %</span>\r\n                        <mat-progress-bar mode=\"determinate\" value=\"{{avenceService(service.tasks)}}\"></mat-progress-bar>\r\n                      \r\n                    </td>\r\n                    <td>\r\n                      {{ stringAsDate(service.createdAt) | date:'dd/MM/yyyy' }}\r\n                    </td>\r\n                    <td>\r\n                     <span class=\"badge badge-warning\"> {{service.finish_date}}</span>\r\n                    </td>\r\n                    <td><a [routerLink]=\"['/docs']\" [queryParams]=\"{id: service._id}\"  class=\"text-primary material-icons\">visibility</a></td>\r\n                  </table>\r\n              </div>\r\n          </div>\r\n      </div>\r\n\r\n      <div class=\"col-md-4\">\r\n        <div class=\"card card-profile\">\r\n            <div class=\"card-avatar\">\r\n                    <img class=\"img\"  *ngIf=\"user?.image\" style=\"width:130px;height:130px\" src=\"{{user?.image}}\" loading=\"lazy\"/>\r\n                   \r\n\r\n            </div>\r\n            <div class=\"card-body\">\r\n             \r\n                  <h4 style=\"text-transform: uppercase;letter-spacing:1px\" class=\"card-title\">{{user?.fname}} {{user?.lname}}</h4>\r\n                 \r\n                <h6 *ngFor=\"let permo of user?.permissions; trackBy: trackByPermo\" class=\"card-category text-gray\">{{permo.groupename}}</h6>\r\n               \r\n              <hr>\r\n                  <div class=\"col-md-12\">\r\n                      <div class=\"card card-chart\">\r\n                          <div style=\"padding:2px;border-radius:20px\" class=\"card-header card-header-info\">\r\n                              <h4 class=\"card-title\"><i class=\"material-icons\">person</i></h4>\r\n                          </div>\r\n                          <br>\r\n                          <div style=\"text-align: left;\" class=\"card-body\">\r\n                              <h4 style=\"font-size: 17px\" class=\"card-category\"><i class=\"material-icons\">email</i>&nbsp;&nbsp;{{user?.email}}</h4>\r\n                              <hr>\r\n                              <h4 style=\"font-size: 17px\" class=\"card-category\"><i class=\"material-icons\">call</i>&nbsp;&nbsp;{{user?.tel}}</h4>\r\n                          </div>\r\n                          <br>\r\n                          <div class=\"card-footer\">\r\n                              <div class=\"stats\">\r\n                                 Le superviseur de ce service prière de le contacter au cas de besoin\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n                             \r\n      \r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n</div>\r\n</div>"]}